@model Wfm.App.Core.Model.WorkforceMetaData

<section class="content">
    <div class="container-fluid">
        <div class="block-header">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <ul class="breadcrumb breadcrumb-style ">
                        <li class="breadcrumb-item">
                            <h4 class="page-title">Employee</h4>
                        </li>
                        <li class="breadcrumb-item bcrumb-1">
                            <a href="/Workforce/Create">
                                <i class="fas fa-layer-group"></i> Workforce
                            </a>
                        </li>
                        <li class="breadcrumb-item active">Create</li>
                    </ul>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="card">
                        <div class="header">
                            <h2>
                                <strong>Add</strong> Employee Detail
                            </h2>
                        </div>
                        <div class="body">

                            <div class="row clearfix">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <div class="form-line">

                                        </div>
                                    </div>
                                </div>
                            </div>

                            @using (Html.BeginForm("Create", "Workforce", FormMethod.Post, new { @id = "EmployeeCreate", @class = "login100-form validate-form", enctype = "multipart/form-data" }))
                            {
                                @Html.HiddenFor(x => x.WF_ID)
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.MRF_INTERNAL_ID, "MRF ID")
                                                @Html.DropDownListFor(m => m.MRF_INTERNAL_ID, new SelectList(Model.MRFList, "Value", "Text"), "MRF ID", new { @class = "col-12 m-t-20 p-l-0" , required = "required" })
                                                @Html.ValidationMessageFor(m => m.MRF_INTERNAL_ID)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.WF_EMP_TYPE, "Hiring Type")
                                                @Html.DropDownListFor(m => m.WF_EMP_TYPE, new SelectList(Model.WF_EMP_TYPEList, "Value", "Text"), "Hirring Type", new { disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.WF_EMP_TYPE)
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.AADHAR_NO, "Aadhar no.")
                                                @Html.TextBoxFor(m => m.AADHAR_NO, "Aadhar No.", new { id = "AADHAR_NO", @class = "form-control disabled", minlength = "12",maxlength = "12" })
                                                @Html.ValidationMessageFor(m => m.AADHAR_NO)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(m => m.WF_DESIGNATION_ID, "Designation")
                                                @Html.DropDownListFor(m => m.WF_DESIGNATION_ID, new SelectList(Model.DesignationList, "Value", "Text"), "Designation", new { id = "WF_DESIGNATION_ID" })
                                                @Html.ValidationMessageFor(m => m.WF_DESIGNATION_ID)
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="row clearfix" id="exitWorkforceShow">
                                    <div class="col-sm-12">
                                        <div class="row col-12" id="exitWorkforce" style="color:red"></div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <label>Designation:</label>
                                                <label id="lblWF_DESIGNATION_NAME"></label>
                                            </div>
                                            <div class="col-md-4">
                                                <label>Skill:</label>
                                                <label id="lblSKILL_NAME"></label>
                                            </div>
                                            <div class="col-md-4">
                                                <label>Exit Date:</label>
                                                <label id="lblEXIT_DATE"></label>
                                            </div>
                                            <div class="col-md-4">
                                                <label>Exit Reason:</label>
                                                <label id="lblEXIT_REASON"></label>
                                            </div>
                                            <div class="col-md-4">
                                                <label>Current Status:</label>
                                                <label id="lblWORKFORCE_STATUS"></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.COMPANY_ID, "Company")
                                                @Html.DropDownListFor(m => m.COMPANY_ID, new SelectList(Model.CompanyList, "Value", "Text"), new { id = "COMPANY_ID", required = "required" })
                                                @Html.ValidationMessageFor(m => m.COMPANY_ID)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.AGENCY_ID, "Agency")
                                                @Html.DropDownListFor(m => m.AGENCY_ID, new SelectList(Model.AgencyList, "Value", "Text"), "Agency", new { id = "AGENCY_ID" })
                                                @Html.ValidationMessageFor(m => m.AGENCY_ID)
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(m => m.SKILL_ID, "Skill")
                                                @Html.DropDownListFor(m => m.SKILL_ID, new SelectList(Model.SkillList, "Value", "Text"), "Skill", new { id = "SKILL_ID", disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.SKILL_ID)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group form-float">
                                            <div class="form-line">
                                                @Html.LabelFor(m => m.EMP_TYPE_ID, "Employee Type")
                                                @Html.DropDownListFor(m => m.EMP_TYPE_ID, new SelectList(Model.EmpTypeList, "Value", "Text"), "Employee Type", new { id = "EMP_TYPE_ID" , required = "required" })
                                                @Html.ValidationMessageFor(m => m.EMP_TYPE_ID)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.BIOMETRIC_CODE, "Biometric")
                                                @Html.TextBoxFor(m => m.BIOMETRIC_CODE, "", new { id = "BIOMETRIC_CODE", @class = "form-control", @type = "text" })
                                                @Html.ValidationMessageFor(m => m.BIOMETRIC_CODE)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.EMP_NAME, "Emp name")
                                                @Html.TextBoxFor(m => m.EMP_NAME, "", new { id = "EMP_NAME", @class = "form-control disabled", @type = "text" })
                                                @Html.ValidationMessageFor(m => m.EMP_NAME)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group form-line">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.FATHER_NAME, "Father name")
                                                @Html.TextBoxFor(m => m.FATHER_NAME, "", new { id = "FATHER_NAME", @class = "form-control disabled", @type = "text" })
                                                @Html.ValidationMessageFor(m => m.FATHER_NAME)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.GENDER, "Gender")
                                                @Html.DropDownListFor(m => m.GENDER, new List<SelectListItem>
                                                {
                                                    new SelectListItem{ Text="Male", Value = "M" },
                                                    new SelectListItem{ Text="Female", Value = "F" }
                                                 }, "Gender", new { id = "GENDER", required = "required" })
                                                @Html.ValidationMessageFor(m => m.GENDER)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-4">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.EMP_STATUS_ID, "Employee status")
                                                @Html.DropDownListFor(m => m.EMP_STATUS_ID, new SelectList(Model.EmployeeStatusList, "Value", "Text"), "Employee Status", new { id = "EMP_STATUS_ID", required = "required" })
                                                @Html.ValidationMessageFor(m => m.EMP_STATUS_ID)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.NATIONALITY, "Nationality")
                                                @Html.DropDownListFor(m => m.NATIONALITY, new List<SelectListItem>
                                                {
                                                    new SelectListItem{ Text="INDIAN", Value = "INDIAN" },
                                                    new SelectListItem{ Text="OTHER", Value = "OTHER" }
                                                 }, "Nationality", new { id = "NATIONALITY", required = "required" })
                                                @Html.ValidationMessageFor(m => m.NATIONALITY)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group form-float">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.WF_EDUCATION_ID, "Education")
                                                @Html.DropDownListFor(m => m.WF_EDUCATION_ID, new SelectList(Model.EducationList, "Value", "Text"), "Education", new { id = "WF_EDUCATION_ID", required = "required" })
                                                @Html.ValidationMessageFor(m => m.WF_EDUCATION_ID)
                                            </div>
                                        </div>
                                    </div>
                                    

                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.DEPT_ID, "Department name")
                                                @Html.DropDownListFor(m => m.DEPT_ID, new SelectList(Model.DepartmentList, "Value", "Text"), "Department", new { id = "DEPT_ID", required = "required" })
                                                @Html.ValidationMessageFor(m => m.DEPT_ID)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.SUBDEPT_ID, "Sub Department")
                                                @Html.DropDownListFor(m => m.SUBDEPT_ID, Enumerable.Empty<SelectListItem>(), "Sub Department", new {required = "required" })
                                                @Html.ValidationMessageFor(m => m.SUBDEPT_ID)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.DATE_OF_BIRTH, "Date of birth")
                                                @Html.TextBoxFor(m => m.DATE_OF_BIRTH, "{0:MM-dd-yyyy}", new { id = "DATE_OF_BIRTH", @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.DATE_OF_BIRTH)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.MARITAL_ID, "Martial status")
                                                @Html.DropDownListFor(m => m.MARITAL_ID, new SelectList(Model.MartialStatusList, "Value", "Text"), "Marital Status", new { id = "MARITAL_ID", required = "required" })
                                                @Html.ValidationMessageFor(m => m.MARITAL_ID)
                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.DOJ, "Date of joining")
                                                @Html.TextBoxFor(m => m.DOJ, "{0:MM-dd-yyyy}", new { id = "DOJ", @class = "datepicker form-control" })
                                                @Html.ValidationMessageFor(m => m.DOJ)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.DOJ_AS_PER_EPF, "EPF date of Joining")
                                                @Html.TextBoxFor(m => m.DOJ_AS_PER_EPF, "{0:mm/dd/yyyy}", new { id = "DOJ_AS_PER_EPF", @class = "datepicker form-control" })
                                                @Html.ValidationMessageFor(m => m.DOJ_AS_PER_EPF)
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.PRESENT_ADDRESS, "Present address")
                                                @Html.TextBoxFor(m => m.PRESENT_ADDRESS, "", new { id = "PRESENT_ADDRESS", @class = "form-control disabled", @type = "text" })
                                                @Html.ValidationMessageFor(m => m.PRESENT_ADDRESS)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group form-float">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.PRESENT_ADDRESS_STATE, "Present address state")
                                                @Html.DropDownListFor(m => m.PRESENT_ADDRESS_STATE, new SelectList(Model.StateList, "Value", "Text"), "Present Address State", new { id = "PRESENT_ADDRESS_STATE", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PRESENT_ADDRESS_STATE)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.PRESENT_ADDRESS_PIN, "Present address pincode")
                                                @Html.TextBoxFor(m => m.PRESENT_ADDRESS_PIN, "", new { id = "PRESENT_ADDRESS_PIN", placeholder = "Present Address Pincode", @class = "form-control disabled", @type = "text" })
                                                @Html.ValidationMessageFor(m => m.PRESENT_ADDRESS_PIN)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group form-float">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.PRESENT_ADDRESS_CITY, "Present address city")
                                                @Html.DropDownListFor(m => m.PRESENT_ADDRESS_CITY, new SelectList(Model.CityList, "Value", "Text"), "Present Address City", new { id = "PRESENT_ADDRESS_CITY", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PRESENT_ADDRESS_CITY)
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.PERMANENT_ADDRESS, "Permanent address")
                                                @Html.TextBoxFor(m => m.PERMANENT_ADDRESS, "", new { id = "PERMANENT_ADDRESS", @class = "form-control disabled", @type = "text" })
                                                @Html.ValidationMessageFor(m => m.PERMANENT_ADDRESS)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group form-float">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.PERMANENT_ADDRESS_STATE, "Permanent address state")
                                                @Html.DropDownListFor(m => m.PERMANENT_ADDRESS_STATE, new SelectList(Model.StateList, "Value", "Text"), "Permanent Address State", new { id = "PERMANENT_ADDRESS_STATE", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PERMANENT_ADDRESS_STATE)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.PERMANENT_ADDRESS_PIN, "Permanent address pincode")
                                                @Html.TextBoxFor(m => m.PERMANENT_ADDRESS_PIN, "", new { id = "PERMANENT_ADDRESS_PIN", @class = "form-control disabled", @type = "text" })
                                                @Html.ValidationMessageFor(m => m.PERMANENT_ADDRESS_PIN)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group form-float">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.PERMANENT_ADDRESS_CITY, "Permanent address city")
                                                @Html.DropDownListFor(m => m.PERMANENT_ADDRESS_CITY, new SelectList(Model.CityList, "Value", "Text"), "Permanent Address City", new { id = "PERMANENT_ADDRESS_CITY", required = "required" })
                                                @Html.ValidationMessageFor(m => m.PERMANENT_ADDRESS_CITY)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.MOBILE_NO, "Mobile no.")
                                                @Html.TextBoxFor(m => m.MOBILE_NO, "", new { id = "MOBILE_NO", @class = "form-control disabled", @type = "text", minlength = "10", maxlength = "10" })
                                                @Html.ValidationMessageFor(m => m.MOBILE_NO)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group form-float">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.ALTERNATE_NO, "Alternate contact no.")
                                                @Html.TextBoxFor(m => m.ALTERNATE_NO, "", new { id = "ALTERNATE_NO", @class = "form-control disabled", @type = "text", minlength = "10", maxlength = "10" })
                                                @Html.ValidationMessageFor(m => m.ALTERNATE_NO)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.EMAIL_ID, "Email address")
                                                @Html.TextBoxFor(m => m.EMAIL_ID, "", new { id = "EMAIL_ID", @class = "form-control disabled", @type = "text" })
                                                @Html.ValidationMessageFor(m => m.EMAIL_ID)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group form-float">
                                            <div class="form-line">
                                                @Html.LabelFor(x => x.IDENTIFICATION_MARK, "Identification mark")
                                                @Html.TextBoxFor(m => m.IDENTIFICATION_MARK, "", new { id = "IDENTIFICATION_MARK", @class = "form-control disabled", @type = "text" })
                                                @Html.ValidationMessageFor(m => m.IDENTIFICATION_MARK)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group form-float">
                                            <div class="form-line">

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                <span>Employee Photo</span>
                                                @Html.TextBoxFor(m => m.PHOTOfile, new { type = "file" })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.PHOTOfile)
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group form-float">
                                            <div class="form-line">
                                                <span>Employee Signature</span>
                                                @Html.TextBoxFor(m => m.SIGNATUREfile, new { type = "file" })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.SIGNATUREfile)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 p-t-20 text-center">
                                    <button type="submit" id="submit" class="btn btn-primary waves-effect m-r-15">Submit</button>
                                    <button type="button" id="cancel" class="btn btn-danger waves-effect">Cancel</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    $(function () {
        jQuery.validator.unobtrusive.adapters.add('filesize', ['maxbytes'], function (options) {
            var params = {
                maxbytes: options.params.maxbytes
            };

            options.rules['filesize'] = params;
            if (options.message) {
                options.messages['filesize'] = options.message;
            }
        });

        jQuery.validator.addMethod("filesize", function (value, element, param) {
            if (value === "") {
                return true;
            }
            var maxBytes = parseInt(param.maxbytes);
            if (element.files != undefined && element.files[0] != undefined && element.files[0].size != undefined) {
                var filesize = parseInt(element.files[0].size);
                return filesize <= maxBytes;
            }
            return true;
        });
    }(jQuery));

    jQuery(function ($) {
        $.validator.addMethod('date',
            function (value, element) {
                if (this.optional(element)) {
                    return true;
                }

                var ok = true;
                try {
                    $.datepicker.parseDate('dd/mm/yy', value);
                }
                catch (err) {
                    ok = false;
                }
                return ok;
            });
    });
    $("#DEPT_ID").change(function () {
        getSubDeptbyDeptId();
    });

    function getSubDeptbyDeptId() {
        var DEPARTMENT_ID = $("#DEPT_ID").val();
        if (DEPARTMENT_ID != null) {
            $.get('/Dashboard/GetSubDepartmentByDepartmentId?departmentId=' + DEPARTMENT_ID, function (data) {
                $('#SUBDEPT_ID').find('option').not(':first').remove();
                $.each(data, function (i, item) {
                    $('#SUBDEPT_ID').append($('<option>', {
                        value: item.SUBDEPT_ID,
                        text: item.SUBDEPT_NAME
                    }));
                });
                $('#SUBDEPT_ID').formSelect();
            });
        } else {
            $('#SUBDEPT_ID').find('option').not(':first').remove();
            $('#SUBDEPT_ID').formSelect();
            GetEmployeeData();
        }
    }

    function getSubDeptbyDeptIdOnEdit(sub_dept_id) {
        var DEPARTMENT_ID = $("#DEPT_ID").val();
        if (DEPARTMENT_ID != null) {
            $.get('/Dashboard/GetSubDepartmentByDepartmentId?departmentId=' + DEPARTMENT_ID, function (data) {
                $('#SUBDEPT_ID').find('option').not(':first').remove();
                $.each(data, function (i, item) {
                    $('#SUBDEPT_ID').append($('<option>', {
                        value: item.SUBDEPT_ID,
                        text: item.SUBDEPT_NAME
                    }));
                });
                $('#SUBDEPT_ID').formSelect();
                $('#SUBDEPT_ID').val(sub_dept_id);
            });
        } else {
            $('#SUBDEPT_ID').find('option').not(':first').remove();
            $('#SUBDEPT_ID').formSelect();
            GetEmployeeData();
        }
    }





    $('#exitWorkforceShow').hide();
    $("#MRF_INTERNAL_ID").change(function () {
        var mrf_Id = $("#MRF_INTERNAL_ID").val();
        if (mrf_Id != "") {
            $.ajax(
                {
                    type: 'Get',
                    url: '/ManPowerRequest/GetMFRHiringType?mrf_Id=' + mrf_Id,
                    success:
                        function (data) {
                            $("#WF_DESIGNATION_ID").val(data.WF_DESIGNATION_ID);
                            $("#WF_EMP_TYPE").val(data.WF_EMP_TYPE);
                            $("#SKILL_ID").val(data.SKILL_ID);
                            $('#WF_DESIGNATION_ID').formSelect();
                            $('#SKILL_ID').formSelect();
                            $('#WF_EMP_TYPE').formSelect();
                        },
                    error:
                        function (response) {
                            alert("Error: " + response);
                        }
                });
        } else {
            $("#WF_EMP_TYPE").val("");
            $('#WF_EMP_TYPE').formSelect();
        }
    });
    function cleanForm() {
        $("#AGENCY_ID").val("");
        $("#BIOMETRIC_CODE").val("");
        $("#EMP_ID").val("");
        $("#EMP_NAME").val("");
        $("#DEPT_ID").val("");
        $("#SUBDEPT_ID").val("");
        $("#DOJ").val("");
        $("#DOJ_AS_PER_EPF").val("");
        $("#EMAIL_ID").val("");
        $("#EMP_STATUS_ID").val("");
        $("#EMP_TYPE_ID").val("");
        $("#EXIT_DATE").val("");
        $("#EXIT_REASON").val("");
        $("#FATHER_NAME").val("");
        $("#GENDER").val("");
        $("#IDENTIFICATION_MARK").val("");
        $("#MARITAL_ID").val("");
        $("#MOBILE_NO").val("");
        $("#NATIONALITY").val("");
        $("#PERMANENT_ADDRESS").val("");
        $("#PERMANENT_ADDRESS_CITY").val("");
        $("#PERMANENT_ADDRESS_PIN").val("");
        $("#PERMANENT_ADDRESS_STATE").val("");
        $("#PRESENT_ADDRESS").val("");
        $("#PRESENT_ADDRESS_CITY").val("");
        $("#PRESENT_ADDRESS_PIN").val("");
        $("#PRESENT_ADDRESS_STATE").val("");
        $("#STATUS").val("");
        $("#WF_EDUCATION_ID").val("");
        $("#WF_ID").val("00000000-0000-0000-0000-000000000000");
        $("#DATE_OF_BIRTH").val("");
        $("#lblEXIT_DATE_SHORT").text();
        $("#lblEXIT_REASON").text();
        $("#lblWF_DESIGNATION_NAME").text();
        $("#lblSKILL_NAME").text();
        $("#lblWORKFORCE_STATUS").text()
        $('select').formSelect();
        $("#exitWorkforce").empty();
    }
    $("#AADHAR_NO").keyup(function () {
        var aadharNo = $("#AADHAR_NO").val();
        if (aadharNo != "" && aadharNo.length === 12) {
            $.ajax(
                {
                    type: 'Get',
                    url: '/Workforce/GetWorkforcByAadharNo?aadharNo=' + aadharNo,
                    success:
                        function (data) {
                            if (data == "NotFound") {

                                cleanForm();
                                return false;
                            }
                            //$('[name="PHOTOfile"]').attr('aria-invalid', false)
                            $("#AGENCY_ID").val(data.AGENCY_ID);
                            $("#BIOMETRIC_CODE").val(data.BIOMETRIC_CODE);
                            $("#EMP_ID").val(data.EMP_ID);
                            $("#EMP_NAME").val(data.EMP_NAME);
                            $("#DEPT_ID").val(data.DEPT_ID);
                            getSubDeptbyDeptIdOnEdit(data.SUBDEPT_ID);
                            $("#DOJ").val(parseJsonDate(data.DOJ));
                            $("#DOJ_AS_PER_EPF").val(parseJsonDate(data.DOJ_AS_PER_EPF));
                            $("#EMAIL_ID").val(data.EMAIL_ID);
                            $("#EMP_STATUS_ID").val(data.EMP_STATUS_ID);
                            $("#EMP_TYPE_ID").val(data.EMP_TYPE_ID);
                            $("#EXIT_DATE").val(data.EXIT_DATE);
                            $("#EXIT_REASON").val(data.EXIT_REASON);
                            $("#FATHER_NAME").val(data.FATHER_NAME);
                            $("#GENDER").val(data.GENDER);
                            $("#IDENTIFICATION_MARK").val(data.IDENTIFICATION_MARK);
                            $("#MARITAL_ID").val(data.MARITAL_ID);
                            $("#MOBILE_NO").val(data.MOBILE_NO);
                            $("#NATIONALITY").val(data.NATIONALITY);
                            $("#PERMANENT_ADDRESS").val(data.PERMANENT_ADDRESS);
                            $("#PERMANENT_ADDRESS_CITY").val(data.PERMANENT_ADDRESS_CITY);
                            $("#PERMANENT_ADDRESS_PIN").val(data.PERMANENT_ADDRESS_PIN);
                            $("#PERMANENT_ADDRESS_STATE").val(data.PERMANENT_ADDRESS_STATE);
                            $("#PRESENT_ADDRESS").val(data.PRESENT_ADDRESS);
                            $("#PRESENT_ADDRESS_CITY").val(data.PRESENT_ADDRESS_CITY);
                            $("#PRESENT_ADDRESS_PIN").val(data.PRESENT_ADDRESS_PIN);
                            $("#PRESENT_ADDRESS_STATE").val(data.PRESENT_ADDRESS_STATE);
                            $("#STATUS").val(data.STATUS);
                            $("#WF_EDUCATION_ID").val(data.WF_EDUCATION_ID);
                            $("#WF_ID").val(data.WF_ID);
                            $("#DATE_OF_BIRTH").val(parseJsonDate(data.DATE_OF_BIRTH));
                            $("#lblEXIT_DATE_SHORT").text(data.EXIT_DATE_SHORT);
                            $("#lblEXIT_REASON").text(data.EXIT_REASON);
                            $("#lblWF_DESIGNATION_NAME").text(data.WF_DESIGNATION_NAME);
                            $("#lblSKILL_NAME").text(data.SKILL_NAME);
                            $("#lblWORKFORCE_STATUS").text(data.STATUS)
                            $("#BIOMETRIC_CODE").attr('data-val', false);
                            $('select').formSelect();
                            $("#exitWorkforce").empty();
                            $("#exitWorkforce").append("The record related to this Aadhar is already exist. Please recheck exiting data");
                            $('#exitWorkforceShow').show();
                        },
                    error:
                        function (response) {
                            alert("Error: " + response);
                        }
                });
        } else {
            cleanForm();
            $('#exitWorkforceShow').hide();
            $("#WF_ID").val("00000000-0000-0000-0000-000000000000");
            $("#BIOMETRIC_CODE").attr('data-val', true);
            $('[name="PHOTOfile"]').attr('data-val', true)
            $("#exitWorkforce").empty();
        }
    });
    $(document).ready(function () {
        var date = new Date();
        date.setFullYear(date.getFullYear() -18);

        $('#DATE_OF_BIRTH').bootstrapMaterialDatePicker({
            format: 'DD/MM/YYYY',
            clearButton: true,
            weekStart: 1,
            maxDate : date,
            time: false
        });
         $("select[required]").css({ display: "block", height: 0, padding: 0, width: 0, position: 'absolute' });
    });
    function ddmmyyyformat() {
        $("#DOJ").datepicker({
            selectYears: 100,
            autoClose: true,
            format: 'dd/mm/yyyy',    // Canadian date format, eh.
            onSelect: function (obj) {

            }
        });
    }
    function parseJsonDate(jsonDateString) {
        return moment(jsonDateString).format("DD/MM/YYYY").toUpperCase();
    }

    $("#cancel").click(function () {
        window.location.href = "/Workforce/AllItems";
    });
</script>



