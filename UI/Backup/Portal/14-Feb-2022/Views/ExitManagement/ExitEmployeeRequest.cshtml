@model Wfm.App.Core.Model.ExitManagementMetaData

@{
    ViewBag.Title = "Exit Management - Empployee Request";
}

<section class="content">
    <div class="container-fluid">
        <div class="block-header">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <ul class="breadcrumb breadcrumb-style ">
                        <li class="breadcrumb-item">
                            <h4 class="page-title">Exit Management</h4>
                        </li>
                        <li class="breadcrumb-item bcrumb-1">
                            <a href="/ExitManagement/ExitEmployeeRequest">
                                <i class="fas fa-layer-group"></i> Employee Exit Request
                            </a>
                        </li>
                        <li class="breadcrumb-item active">Create</li>
                    </ul>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="card">
                        <div class="header">
                            <h2>
                                <strong>Request</strong> Employee Exit 
                            </h2>
                        </div>
                        <div class="body">

                            <div class="row clearfix">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <div class="card">
                                        <div class="body">
                                            @using (Html.BeginForm("ExitEmployeeRequest", "ExitManagement", FormMethod.Post, new { id = "exitEmployeeRequest" }))
                                            {
                                                <div class="row clearfix">
                                                    <div class="col-lg-2 col-md-2 col-sm-4 col-xs-5 form-control-label">
                                                        <label for="workFlowName">Department Name</label>
                                                    </div>
                                                    <input type="hidden" id="rowValue" value="0" />
                                                    <div class="col-lg-10 col-md-10 col-sm-8 col-xs-7">
                                                        <div class="form-group">
                                                            <div class="form-line">
                                                                @Html.DropDownListFor(x => x.DEPT_ID, Model.Departments, "-- Select --", new { required = "true" })
                                                                @Html.ValidationMessageFor(m => m.DEPT_ID)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row clearfix">
                                                    <div class="col-lg-2 col-md-2 col-sm-4 col-xs-5 form-control-label">
                                                        <label>Sub Department</label>
                                                    </div>
                                                    <div class="col-lg-10 col-md-10 col-sm-8 col-xs-7">
                                                        <div class="form-group">
                                                            <div class="form-line">
                                                                @Html.DropDownListFor(x => x.SUBDEPT_ID, Enumerable.Empty<SelectListItem>(), "All", new { required = "true" })
                                                                @Html.ValidationMessageFor(m => m.SUBDEPT_ID)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row clearfix">
                                                    <div class="col-lg-2 col-md-2 col-sm-4 col-xs-5 form-control-label">
                                                        <label for="password_2">Employee Type</label>
                                                    </div>
                                                    <div class="col-lg-10 col-md-10 col-sm-8 col-xs-7">
                                                        <div class="form-group">
                                                            <div class="form-line">
                                                                @Html.DropDownListFor(x => x.WorkforceMetaData.WF_EMP_TYPE, new SelectList(ViewBag.EmployeeTypes, "Value", "Text"), "-- Select --", htmlAttributes: new { id = "WF_EMP_TYPE", required = true })
                                                                @Html.ValidationMessageFor(m => m.WorkforceMetaData.WF_EMP_TYPE)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row clearfix">
                                                    <div class="col-lg-2 col-md-2 col-sm-4 col-xs-5 form-control-label">
                                                        <label for="password_2">Employee Name</label>
                                                    </div>
                                                    <div class="col-lg-10 col-md-10 col-sm-8 col-xs-7">
                                                        <div class="form-group">
                                                            <div class="form-line">
                                                                <div>
                                                                    @Html.TextBoxFor(x => x.EMP_NAME, new { id = "EMP_NAME", required = "true" })
                                                                    @Html.ValidationMessageFor(m => m.EMP_NAME)
                                                                    @Html.HiddenFor(x => x.WF_ID, new { id = "WF_ID" })

                                                                </div>
                                                                @Html.ValidationMessageFor(m => m.WF_ID)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row clearfix">
                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                                        <div class="card">
                                                            <div id="emplyeedetail" style="display:none;"> </div>

                                                        </div>
                                                    </div>
                                                </div>



                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<style type="text/css">
    .Show {
        display: block;
    }

    .Hide {
        display: none;
    }

    .ui-autocomplete {
        background-color: #f5f5f5;
        max-width: 500px;
        max-height: 200px;
        overflow-y: scroll;
        overflow-x: hidden;
        z-index: 100;
        border: 0px 1px 1px 1px;
    }

    .ui-menu-item .ui-menu-item-wrapper.ui-state-active {
        background-color: #DCDCDC;
        color: #000000;
    }
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1050;
        display: none;
        width: 100%;
        height: auto !important;
        overflow: hidden;
        outline: 0;
    }
</style>

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Content/assets/js/pages/exit-management/exit-management.js"></script>
<script>
    $(document).ready(function () {
        $("select[required]").css({ position: "absolute", display: "inline", height: 0, padding: 0, width: 0 });
    });

    $('#btnSaveAssetAllocation').on("click", btnSave);
    function btnSave() {
        var $form = $('#exitEmployeeRequest');

        $.ajax({
            type: "POST",
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
            },
            success: function (response) {
                window.location.href = response.Url;
            }
        });
    }
    $("#DEPT_ID").change(function () {
        getSubDeptbyDeptId();
    });

    function getSubDeptbyDeptId() {
        var DEPARTMENT_ID = $("#DEPT_ID").val();
        if (DEPARTMENT_ID != null) {
            $.get('/Dashboard/GetSubDepartmentByDepartmentId?departmentId=' + DEPARTMENT_ID, function (data) {
                $('#SUBDEPT_ID').find('option').not(':first').remove();
                $.each(data, function (i, item) {
                    $('#SUBDEPT_ID').append($('<option>', {
                        value: item.SUBDEPT_ID,
                        text: item.SUBDEPT_NAME
                    }));
                });
                $('#SUBDEPT_ID').formSelect();
            });
        } else {
            $('#SUBDEPT_ID').find('option').not(':first').remove();
            $('#SUBDEPT_ID').formSelect();
        }
    }
    $(document).on('click', '#btnSaveAssetAllocation', function () {

        if (!$("#exitEmployeeRequest").valid()) {

            return false;

        }
        else {
            btnSave();
        }
    });
    $("#EMP_NAME").autocomplete({
        max: 10,
        minLength: 1,
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("LoadWorkforceByWFType", "Workforce")',
                datatype: "json",
                data: {                    
                    deptId: $("#DEPT_ID").val(),
                    sub_dept_id: $("#SUBDEPT_ID").val(),
                    query: $('#EMP_NAME').val(),
                    emp_type_id: $('#WF_EMP_TYPE').val()
                },
                success: function (data) {
                    if (!data.length) {
                        var result = [{ label: "no results", value: response.term }];
                        response(result);
                    }
                    else {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.Name,
                                value: val.Name,
                                empId: val.ID
                            }
                        }))
                    }
                }
            })
        },
        select: function (event, ui) {
            var label = ui.item.label;
            if (label === "no results") {
                event.preventDefault();
            }
            else {
                /* do something with the selected result */
                $("#WF_ID").val(ui.item.empId);
                employeeOnChange();
            }
        },
        open: function () {
            $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
        },
        close: function () {
            $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
        }
    });

    function getByResignationDateExitDate(date) {
        var noticeDate = parseInt($('#NOTICE_DAYS').val());
        if (isNaN(noticeDate)) {
            noticeDate = 1;
        }
        days = parseInt($(noticeDate, 1));

        if (!isNaN(date.getTime())) {
            date.setDate(date.getDate() + noticeDate);

            var yyyy = date.getFullYear().toString();
            var mm = (date.getMonth() + 1).toString(); // getMonth() is zero-based
            var dd = date.getDate().toString();
            $("#EXIT_DATE").val(dd + '/' + mm + '/' + yyyy);
        } else {
            alert("Invalid Date");
        }
    }

    function getByNoticeDayExitDate() {

        var noticeDate = parseInt($('#NOTICE_DAYS').val());
        var dateParts = $("#RESIGNATION_DATE").val().split("/");
        var date = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);
        if (isNaN(noticeDate)) {
            noticeDate = 1;
        } 
        days = parseInt($(noticeDate,1));

        if (!isNaN(date.getTime())) {
            date.setDate(date.getDate() + noticeDate);

            var yyyy = date.getFullYear().toString();
            var mm = (date.getMonth() + 1).toString(); // getMonth() is zero-based
            var dd = date.getDate().toString();
            $("#EXIT_DATE").val(dd + '/' + mm + '/' + yyyy);
        } else {
            //alert("Invalid Date");
        }
    }

   
</script>
