@model Wfm.App.Core.Model.GatePassMetaData

@{
    ViewBag.Title = "Gate Pass - Create";
}

<section class="content">
    <div class="container-fluid">
        <div class="block-header">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <ul class="breadcrumb breadcrumb-style ">
                        <li class="breadcrumb-item">
                            <h4 class="page-title">Gate Pass</h4>
                        </li>
                        <li class="breadcrumb-item bcrumb-1">
                            <a href="/GatePass/Create">
                                <i class="fas fa-layer-group"></i> Gate Pass
                            </a>
                        </li>
                        <li class="breadcrumb-item active">Create</li>
                    </ul>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="card">
                        <div class="header">
                            <h2>
                                <strong>Add</strong> Gate Pass
                            </h2>
                        </div>
                        <div class="body">
                            @using (Html.BeginForm("Create", "GatePass", FormMethod.Post, new { @id = "GatePassCreate", @class = "login100-form validate-form" }))
                            {
                            <div class="row clearfix">
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.LabelFor(x => x.BUILDING_ID, "Unit")
                                            @Html.DropDownListFor(x => x.BUILDING_ID, ViewBag.Buildings as SelectList, "-- Select--", new { id = "BUILDING_ID", required = "true", @onchange = "onBuildingChange()" })
                                            @Html.ValidationMessageFor(m => m.BUILDING_ID)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.LabelFor(x => x.DEPT_ID, "Department", new { @class = "required" })
                                            @Html.DropDownListFor(x => x.DEPT_ID, new SelectList(ViewBag.Dept, "Value", "Text"), "--Select--", new { id = "DEPT_ID", required = "required", @onchange = "onDepartmentChange()" })
                                            @Html.ValidationMessageFor(m => m.DEPT_ID)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.LabelFor(x => x.SUBDEPT_ID, "Sub Department", new { @class = "required" })
                                            @Html.DropDownListFor(x => x.SUBDEPT_ID, ViewBag.SubDepartments as SelectList, "All", new { id = "SUBDEPT_ID", required = "required" })
                                            @Html.ValidationMessageFor(m => m.SUBDEPT_ID)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.LabelFor(x => x.WF_EMP_TYPE, "Employee Type", new { @class = "required" })
                                            @Html.DropDownListFor(x => x.WF_EMP_TYPE, new SelectList(ViewBag.EmployeeTypes, "Value", "Text"), "--Select--", htmlAttributes: new { id = "WF_EMP_TYPE", required = "required" })
                                            @Html.ValidationMessageFor(m => m.WF_EMP_TYPE)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row clearfix">

                                <div class="col-sm-12">
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.LabelFor(x => x.EMP_NAME, "Employee Name", new { @class = "required" })
                                            &nbsp;&nbsp;&nbsp;<label>
                                                <input type="checkbox" name="twfmIds" class="filled-in" value="" id="chk" />
                                                <span class="text-primary">Please select checkbox if you want to select all</span>
                                            </label>
                                            @Html.ListBoxFor(x => x.EMP_NAME, new SelectList(ViewBag.EmpName, "Value", "Text"), new { required = "required", @class = "listbox" })
                                            @Html.ValidationMessageFor(m => m.EMP_NAME)
                                        </div>
                                    </div>
                                </div>
                               
                            </div>
                                @Html.HiddenFor(m => m.WORKFORCE.WF_ID, new { id = "WF_ID" })
                        <div class="row clearfix">
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <div class="form-line">
                                        @Html.LabelFor(m => m.PURPOSE, "Purpose", new { @class = "required" })
                                        @Html.DropDownListFor(m => m.PURPOSE, new List<SelectListItem>
                                        {
                                            new SelectListItem{ Text="Official", Value = "Official" },
                                            new SelectListItem{ Text="Personal", Value = "Personal" }
                                         }, "Purpose", new { @class = "col-12 m-t-20 p-l-0", required = "required" })
                                        @Html.ValidationMessageFor(m => m.PURPOSE)
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <div class="form-line">
                                        @Html.LabelFor(m => m.START_DATE, "Start Date", new { @class = "required" })
                                        @*@Html.TextBoxFor(m => m.START_DATE, new { @class = "datepicker form-control dateddmmyyyy" })*@
                                        @Html.TextBoxFor(m => m.START_DATE, "{0:dd/mm/yyyy}", new { required = "true", @class = "datepicker form-control dateddmmyyyy" })
                                        @*@Html.ValidationMessageFor(m => m.START_DATE)*@
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <div class="form-line">
                                        @Html.LabelFor(m => m.END_DATE, "End Date", new { @class = "required" })
                                        @Html.TextBoxFor(m => m.END_DATE, new { @class = "datepicker form-control dateddmmyyyy" })
                                        @*@Html.ValidationMessageFor(m => m.END_DATE)*@
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <div class="form-line">
                                        @Html.LabelFor(m => m.OUT_TIME, "Out Time", new { @class = "required" })
                                        @Html.TextBoxFor(m => m.OUT_TIME, "", new { @class = "form-control ", @type = "time" })
                                        @Html.ValidationMessageFor(m => m.OUT_TIME)
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <div class="form-line">
                                        @Html.LabelFor(m => m.IN_TIME, "In Time", new { @class = "required" })
                                        @Html.TextBoxFor(m => m.IN_TIME, "", new { @class = "form-control ", @type = "time" })
                                        @Html.ValidationMessageFor(m => m.IN_TIME)
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group form-line">
                                    <div class="form-line">

                                        @Html.LabelFor(m => m.MOBILE_NO, "Mobile no.")
                                        @Html.TextBoxFor(m => m.MOBILE_NO, "", new { @class = "form-control disabled", @type = "text", maxlength = "10" })
                                        @Html.ValidationMessageFor(m => m.MOBILE_NO)
                                    </div>
                                </div>
                            </div>
                        </div>
                               
                                <div class="row clearfix" style="display:none">
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(m => m.ACTUAL_OUTTIME, "Actual Out Time")
                                                @Html.TextBoxFor(m => m.ACTUAL_OUTTIME, "", new { @class = "form-control timepicker", @type = "text", @disabled = "disabled" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(m => m.ACTUAL_INTIME, "Actual In Time")
                                                @Html.TextBoxFor(m => m.ACTUAL_INTIME, "", new { @class = "form-control timepicker", @type = "text", @disabled = "disabled" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="row clearfix" style="display:none">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(m => m.WORKFORCE.EMP_NAME, "Full name")
                                                @Html.TextBoxFor(m => m.WORKFORCE.EMP_NAME, "", new { @class = "form-control disabled", @type = "text" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group form-float">
                                            <div class="form-line">
                                                @Html.LabelFor(m => m.WORKFORCE.FATHER_NAME, "Father name")
                                                @Html.TextBoxFor(m => m.WORKFORCE.FATHER_NAME, new { @class = "form-control disabled", @type = "text" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row clearfix">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.LabelFor(m => m.REMARK, "Remark")
                                                @Html.TextAreaFor(m => m.REMARK, 2, 40, new { @class = "form-control no-resize", @type = "text" })

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 p-t-20 text-center">
                                    <button type="button" id="submit" class="btn btn-primary waves-effect m-r-15">Submit</button>
                                    <button type="button" id="cancel" class="btn btn-danger waves-effect">Cancel</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Content/assets/js/pages/gatepass/gatepass.js?v=1"></script>

<script type="text/javascript">

    //$("#WF_EMP_TYPE").change(function () {
    //    var departmentId = $("#DEPT_ID option:selected").val();
    //    $.get('/GatePass/BindWorkforceByWFType_E?departmentId=' + departmentId, function (data) {
    //        $('#SUBDEPT_ID').find('option').not(':first').remove();
    //        $.each(data, function (i, item) {
    //            $('#SUBDEPT_ID').append($('<option>', {
    //                value: item.SUBDEPT_ID,
    //                text: item.SUBDEPT_NAME
    //            }));
    //        });
    //        $('#SUBDEPT_ID').formSelect();
    //    });
    //});

    $("#SUBDEPT_ID").change(function () {
        $("#WF_EMP_TYPE").val('');
        $("#WF_EMP_TYPE").formSelect();
    })

    $("#WF_EMP_TYPE").change(function () {
        debugger
        $('#EMP_NAME').empty();
        $('#EMP_NAME').formSelect();
        if ($('#BUILDING_ID').val() != "" && $('#DEPT_ID').val() != ""  && $('#WF_EMP_TYPE').val()!="") {
            $.ajax({
                url: '@Url.Action("BindWorkforceByWFType", "GatePass")',
            datatype: "json",
            data: {
                BUILDING_ID: $("#BUILDING_ID").val(),
                deptId: $("#DEPT_ID").val(),
                emp_type_id: $('#WF_EMP_TYPE').val(),
                sub_dept_id: $("#SUBDEPT_ID").val() ||'00000000-0000-0000-0000-000000000000'
                
            },
                success: function (data) {
                    debugger;
                   
                    var dictionary = new Array();

                    $('#EMP_NAME').empty();
                    $('#EMP_NAME').formSelect();

                    if (data != null) {
                        $.each(data, function (i, subdept) {
                            var v = { Value: subdept.Name, Text: subdept.ID };

                            if (dictionary.find(x => x.Key === subdept.Name) === undefined) {
                                var entry = {};
                                entry.Key = subdept.Name;
                                entry.Value = new Array();
                                entry.Value.push(v);

                                dictionary.push(entry);
                            }
                            else {
                                var obj = dictionary.find(x => x.Key === subdept.Name);
                                obj.Value.push(v);
                            }
                        });

                        console.log(dictionary);
                        var optgroup = "";
                        $.each(dictionary, function (i, group) {
                            /*  optgroup += "<optgroup label='" + group.Key + "'>";*/
                            $.each(group.Value, function (j, item) {
                                var option = "<option value='" + item.Value + "'>" + item.Value + "</option>";
                                optgroup += option;
                            });
                            optgroup += "</optgroup>";
                        });

                        $('#EMP_NAME').append(optgroup);
                        $('#EMP_NAME').formSelect();
                    }
                },
                error: function (responseText) {
                    alert(responseText);
                }
            });
        }
    });
</script>
<script tyep="text/javascript">
    function onDepartmentChange() {
       
        var departmentId = $("#DEPT_ID option:selected").val();
        $.get('/GatePass/GetSubDepartmentByDepartmentId?departmentId=' + departmentId, function (data) {
            $('#SUBDEPT_ID').find('option').not(':first').remove();
            $.each(data, function (i, item) {
                $('#SUBDEPT_ID').append($('<option>', {
                    value: item.SUBDEPT_ID,
                    text: item.SUBDEPT_NAME
                }));
            });
            $('#SUBDEPT_ID').formSelect();
            $("#WF_EMP_TYPE").val('');
            $("#WF_EMP_TYPE").formSelect();
        });
    }
    $('input[type="checkbox"]').click(function () {
        if ($('#DEPT_ID').val() != ""  && $('#WF_EMP_TYPE').val() != "") {
            if ($(this).is(":checked")) {
                flag = 0; var str = '';
                $("#EMP_NAME option").each(function () {
                    str += $(this).val() + ', ';
                });
                res = str.split(", ");
                $("#EMP_NAME").val(res);
                $('#EMP_NAME').formSelect();
            }
            else if ($(this).is(":not(:checked)")) {
                $("#EMP_NAME").val('');
                $('#EMP_NAME').formSelect();
            }
        } else {
            $('#chk').prop("checked", false);
            alert('Please select above fields.');
        }
    });
    $(document).ready(function () {
        $("select[required]").css({ display: "block", height: 0, padding: 0, width: 0, position: 'absolute' });
        var date = new Date();
        date.setDate(date.getDate());

        $('#START_DATE,#END_DATE').bootstrapMaterialDatePicker({
            format: 'DD/MM/YYYY',
            clearButton: true,
            weekStart: 1,
            minDate: date,
            time: false
        });
        $('#START_DATE').bootstrapMaterialDatePicker('setDate', date);
        $('#END_DATE').bootstrapMaterialDatePicker('setDate', date);
        $('#DEPT_ID').find('option').not(':first').remove();
        /*getSubDeptbyDeptId();*/
       
    });

</script>

