
@model Wfm.App.Core.Model.TrainningWorkforceMetaData

@{
    ViewBag.Title = "Workforce Trainning - Add";
}

<section class="content">
    <div class="container-fluid">
        <div class="block-header">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <ul class="breadcrumb breadcrumb-style ">
                        <li class="breadcrumb-item">
                            <h4 class="page-title">Workforce Training</h4>
                        </li>
                        <li class="breadcrumb-item bcrumb-1">
                            <a href="/WorkforceTrainning/TrainningWorkforce">
                                <i class="fas fa-layer-group"></i>Workforce Training
                            </a>
                        </li>
                        <li class="breadcrumb-item active">Search</li>
                    </ul>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="card">
                        <div class="header">
                            <h2>
                                <strong>Add</strong> Workforce Training
                            </h2>
                        </div>
                        <div class="body">

                            <div class="row clearfix">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <div class="card">
                                        <div class="body">
                                            @using (Html.BeginForm("AddTrainningWorkforce", "WorkforceTrainning", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                            {
                                                <input type="hidden" id="rowValue" value="@ViewBag.RowCount" />

                                                <div class="row col-12">
                                                    <div class="col-sm-3">
                                                        <div class="form-group">
                                                            <div class="form-line">
                                                                @Html.LabelFor(x => x.BUILDING_ID, "Unit", new { @class = "required" })
                                                                @Html.DropDownListFor(x => x.BUILDING_ID, ViewBag.Buildings as SelectList, "-- Select--", new { id = "BUILDING_ID", required = "true", @onchange = "onBuildingChange()" })
                                                                @Html.ValidationMessageFor(m => m.BUILDING_ID)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-3">
                                                        <div class="form-group">
                                                            <div class="form-line">
                                                                @Html.LabelFor(x => x.DEPT_ID, "Department", new { @class = "required" })
                                                                @Html.DropDownListFor(x => x.DEPT_ID, Model.Departments, "--Select--", new { required = "true" })
                                                                @Html.ValidationMessageFor(m => m.DEPT_ID)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-3">
                                                        <div class="form-group">
                                                            <div class="form-line">
                                                                @Html.LabelFor(x => x.SUBDEPT_ID, "Sub Department", new { @class = "required" })
                                                                @Html.DropDownListFor(x => x.SUBDEPT_ID, Enumerable.Empty<SelectListItem>(), "--Select--", new { })
                                                                @Html.ValidationMessageFor(m => m.SUBDEPT_ID)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-3">
                                                        <div class="form-group">
                                                            <div class="form-line">
                                                                <label for="password_2">Employee Type <span class="text-danger">*</span></label>
                                                                @Html.DropDownListFor(x => x.WF_EMP_TYPE, new SelectList(ViewBag.EmployeeTypes, "Value", "Text"), "-- Select--", htmlAttributes: new { id = "WF_EMP_TYPE", @class = "selectpicker", data_live_search = "true" })
                                                                @Html.ValidationMessageFor(m => m.WF_EMP_TYPE)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row col-12">
                                                    <div class="col-sm-12">
                                                        <div class="form-group">
                                                            <div class="form-line">
                                                                @Html.LabelFor(x => x.EMP_NAMES, "Employee Name", new { @class = "required", id = "Emplbl" })
                                                                &nbsp;&nbsp;&nbsp;<label>
                                                                    <input type="checkbox" name="twfmIds" class="filled-in" value="" id="chk" />
                                                                    <span class="text-primary">Please select checkbox if you want to select all</span>
                                                                </label>

                                                                @Html.ListBoxFor(x => x.EMP_NAMES, new SelectList(ViewBag.EmpName, "Value", "Text"), new { required = "required", @class = "listbox", @onchange = "addTrainning()" })
                                                                @Html.ValidationMessageFor(m => m.EMP_NAMES)

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row col-12" style="display:none">

                                                    <div class="col-sm-12">
                                                        <div class="form-group">
                                                            <div class="form-line">
                                                                <label>Is completed ?<span class="text-danger">*</span></label>
                                                                @Html.DropDownListFor(x => x.ISCOMPLETED, new List<SelectListItem>
                                                                                                {
                                                                                                    new SelectListItem{ Text="Yes", Value = "Y" },
                                                                                                    new SelectListItem{ Text="No", Value = "N",Selected=true }
                                                                                                 }, "-- Select--", new { required = "true" })
                                                                @Html.ValidationMessageFor(m => m.ISCOMPLETED)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row clearfix">
                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                                        <div class="card">
                                                            <div id="trainningForWorkforce" style="display:none;"> </div>
                                                        </div>
                                                    </div>
                                                </div>
                                               

                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style type="text/css">
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1050;
        display: none;
        width: 100%;
        height: auto !important;
        overflow: hidden;
        outline: 0;
    }

    .Show {
        display: block;
    }

    .Hide {
        display: none;
    }

    .ui-autocomplete {
        background-color: #f5f5f5;
        max-width: 500px;
        max-height: 200px;
        overflow-y: scroll;
        overflow-x: hidden;
        z-index: 100;
        border: 0px 1px 1px 1px;
    }

    .ui-menu-item .ui-menu-item-wrapper.ui-state-active {
        background-color: #DCDCDC;
        color: #000000;
    }
</style>
<script>
    $(function () {
        var msg = '@ViewData["result"]';
        if (msg == 'success') {
            alert("Tranning details Submitted Successfully.");
            window.location.href = "@Url.Action("TrainningWorkforce", "WorkforceTrainning")";
        } else {

        }
    })
    var flag = 1;
    $(window).on('load', function () {
        $(".page-loader-wrapper").remove();

    })
    $(document).ready(function () {
        $("select[required]").css({ position: "absolute", display: "inline", height: 0, padding: 0, width: 0 });
        $('.dateddmmyyyy').bootstrapMaterialDatePicker({
            format: 'DD/MM/YYYY',
            clearButton: true,
            weekStart: 1,
            time: false,
            autoClose: true,
        });
        $('#DEPT_ID').find('option').not(':first').remove();
        getSubDeptbyDeptId();
    });
    $("#EMP_NAME").autocomplete({
        max: 10,
        minLength: 1,
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("LoadWorkforceByWFType", "Workforce")',
                datatype: "json",
                data: {
                    deptId: $("#DEPT_ID").val(),
                    sub_dept_id: $("#SUBDEPT_ID").val(),
                    query: $('#EMP_NAME').val(),
                    emp_type_id: $('#WF_EMP_TYPE').val()
                },
                success: function (data) {
                    if (!data.length) {
                        var result = [{ label: "no results", value: response.term }];
                        response(result);
                        //$('[name="PHOTOfile"]').attr('data-val', true);
                    }
                    else {
                        response($.map(data, function (val, item) {
                            return {
                                label: val.Name,
                                value: val.Name,
                                empId: val.ID
                            }
                        }))
                    }
                }
            })
        },
        select: function (event, ui) {
            $("#WF_ID").val(ui.item.empId);
            addTrainning();
        },
        open: function () {
            $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
        },
        close: function () {
            $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
        }
    });
    function addNewRow() {
        debugger
    var $tableBody = $('#tblParticipantList').find("tbody"),
            $trLast = $tableBody.find("tr:last"),
        $trNew = $trLast.clone();
        var tr = 0;
        $trNew.find('td').each(function () {
            var el = $(this).find('[id^=ListMetaDatas]');
                var id = el.attr('id') || null;
                if (id) {
                    //var i = id.substr(id.length - 1);
                    var i = parseInt(id[14]) + 1;
                    var str1 = id;
                    var str2 = "ListMetaDatas_remove_";
                    if (str1.indexOf(str2) != -1) {
                        i = parseInt(id.substr(21)) + 1;
                        tr = i;
                        el.attr('id', 'ListMetaDatas_remove_' + i );
                    } else {

                        var columnName = id.substr(17);

                        el.attr('id', 'ListMetaDatas_' + i + '__' + columnName);
                        el.attr('name', 'ListMetaDatas[' + i + '].' + columnName);
                        if (columnName === "DEPT_ID") {
                            el.attr('onchange', 'departmentOnChange(' + i + ')');
                        }
                    }
                }
            });
        $trLast.after($trNew);
        if (tr >= 1) {
            $('#ListMetaDatas_remove_' + tr).html('<button type="button" onclick="remodeAsset(' + tr + ')" id="btnRemoveAsset" value="' + tr + '">Remove</button>');
            if (tr > 1) {
                $('#ListMetaDatas_remove_' + (tr-1));
            }
        }
        $('.dateddmmyyyy').bootstrapMaterialDatePicker({
            format: 'DD/MM/YYYY',
            clearButton: true,
            weekStart: 1,
            time: false,
            autoClose: true,
        });

    }

    $('input[type="checkbox"]').click(function () {
        if ($('#DEPT_ID').val() != "" && $('#SUBDEPT_ID').val() != "" && $('#WF_EMP_TYPE').val() != "") {
            if ($(this).is(":checked")) {
                flag = 0; var str = '';
                $("#EMP_NAMES option").each(function () {
                    str += $(this).val() + ', ';
                });
                res = str.split(", ");
                $("#EMP_NAMES").val(res);
                $('#EMP_NAMES').formSelect();
            }
            else if ($(this).is(":not(:checked)")) {
                $("#EMP_NAMES").val('');
                $('#EMP_NAMES').formSelect();
            }
        } else {
            $('#chk').prop("checked", false);
            alert('Please select above fields.');

        }
        addTrainning();
    });

    function addTrainning() {
        var departId = $('#DEPT_ID').val();
        var subdepartId = $('#SUBDEPT_ID').val();
        var rowNumber = $('#rowValue').val();
        if (rowNumber => 0) {
            var url = "/WorkforceTrainning/AddWorkforceTrainningByDeptId?row=" + rowNumber + '&deptId=' + departId + '&sub_Id=' + subdepartId;
            $.get(url, function (data) {
                 $('#trainningForWorkforce').html(data);
                $('#trainningForWorkforce').fadeIn('fast');
                if (rowNumber >= 1) {
                    var removeTd = parseInt(rowNumber) + 1;
                    $('#ListMetaDatas_remove_' + removeTd).html('<button type="button" onclick="remodeAsset(' + rowNumber + ')" id="btnRemoveAsset" value="' + rowNumber + '">Remove</button>');
                    if (rowNumber > 1) {
                        $('#ListMetaDatas_remove_' + rowNumber).empty();
                    }
                }
                $('.dateddmmyyyy').bootstrapMaterialDatePicker({
                    format: 'DD/MM/YYYY',
                    clearButton: true,
                    weekStart: 1,
                    time: false,
                    autoClose: true,
                });
            });
        }
    }
    function remodeAsset(tr) {
        $("table#tblParticipantList tr:nth-child(" + tr + ")").remove();

        if (tr > 0) {
            removeTd = tr - 1
            if (removeTd > 1)
                $('#ListMetaDatas_remove_' + removeTd).html('<button type="button" onclick="remodeAsset(' + removeTd + ')" id="btnRemoveAsset" value="' + removeTd + '">Remove</button>');
        }
    }
    $("#DEPT_ID").change(function () {
        getSubDeptbyDeptId();
        $('#trainningForWorkforce').html('');
        $('#WF_EMP_TYPE').formSelect();
        $('#EMP_NAMES').empty();
        $('#EMP_NAMES').formSelect();
    });
    function getSubDeptbyDeptId() {
        var DEPARTMENT_ID = $("#DEPT_ID").val();
        if (DEPARTMENT_ID != null) {
            $.get('/Dashboard/GetSubDepartmentByDepartmentId?departmentId=' + DEPARTMENT_ID, function (data) {
                $('#SUBDEPT_ID').find('option').not(':first').remove();
                $.each(data, function (i, item) {
                    $('#SUBDEPT_ID').append($('<option>', {
                        value: item.SUBDEPT_ID,
                        text: item.SUBDEPT_NAME
                    }));
                });
                $('#SUBDEPT_ID').formSelect();
            });
        } else {
            $('#SUBDEPT_ID').find('option').not(':first').remove();
            $('#SUBDEPT_ID').formSelect();
        }
    }
    $("#SUBDEPT_ID").change(function () {
        var DEPARTMENT_ID = $("#DEPT_ID").val();
        if (DEPARTMENT_ID != null) {
        }
    });
    $("#WF_EMP_TYPE").change(function () {
        debugger;
          $('#EMP_NAMES').empty();
          $('#EMP_NAMES').formSelect();
        if ($('#BUILDING_ID').val() != "" && $('#DEPT_ID').val() != "" && $('#SUBDEPT_ID').val() != "" && $('#WF_EMP_TYPE').val()!="") {
            $.ajax({
                url: '@Url.Action("BindWorkforceByWFType", "Workforce")',
            datatype: "json",
            data: {
                BUILDING_ID: $("#BUILDING_ID").val(),
                deptId: $("#DEPT_ID").val(),
                sub_dept_id: $("#SUBDEPT_ID").val(),
                emp_type_id: $('#WF_EMP_TYPE').val()
            },
                success: function (data) {
                    debugger;
                    var uniqueGroups = new Array();
                    var dictionary = new Array();

                    $('#EMP_NAMES').empty();
                    $('#EMP_NAMES').formSelect();

                    if (data != null) {
                        $.each(data, function (i, subdept) {
                            var v = { Value: subdept.Name, Text: subdept.ID };

                            if (dictionary.find(x => x.Key === subdept.Name) === undefined) {
                                var entry = {};
                                entry.Key = subdept.Name;
                                entry.Value = new Array();
                                entry.Value.push(v);

                                dictionary.push(entry);
                            }
                            else {
                                var obj = dictionary.find(x => x.Key === subdept.Name);
                                obj.Value.push(v);
                            }
                        });

                        console.log(dictionary);
                        var optgroup = "", optgroup1 = "";


                        $.each(dictionary, function (i, group) {

                            $.each(group.Value, function (j, item) {
                                var option = "<option value='" + item.Value + "'>" + item.Value + "</option>";
                                optgroup += option;
                            });
                            optgroup += "</optgroup>";
                        });

                        $('#EMP_NAMES').append(optgroup);
                        $('#EMP_NAMES').formSelect();
                    }
                },
                error: function (responseText) {
                    alert(responseText);
                }
            });
        }
    });
    function onBuildingChange() {
        var buildingId = $("#BUILDING_ID option:selected").val();
        $.get('/ManPowerRequest/GetFloorByBuildingId?buildingId=' + buildingId, function (data) {
            $('#DEPT_ID').find('option').not(':first').remove();
            $.each(data, function (i, item) {
                $('#DEPT_ID').append($('<option>', {
                    value: item.DEPT_ID,
                    text: item.DEPT_NAME
                }));
            });
            $('#DEPT_ID').formSelect();
        });
    }


</script>
<script type="text/javascript">
    //$(function () {
    //    jQuery.validator.unobtrusive.adapters.add('filesize', ['maxbytes'], function (options) {
    //        var params = {
    //            maxbytes: options.params.maxbytes
    //        };

    //        options.rules['filesize'] = params;
    //        if (options.message) {
    //            options.messages['filesize'] = options.message;
    //        }
    //    });

    //    jQuery.validator.addMethod("filesize", function (value, element, param) {
    //        if (value === "") {
    //            return true;
    //        }
    //        var maxBytes = parseInt(param.maxbytes);
    //        if (element.files != undefined && element.files[0] != undefined && element.files[0].size != undefined) {
    //            var filesize = parseInt(element.files[0].size);
    //            return filesize <= maxBytes;
    //        }
    //        return true;
    //    });
    //}(jQuery));

    //jQuery(function ($) {
    //    $.validator.addMethod('date',
    //        function (value, element) {
    //            if (this.optional(element)) {
    //                return true;
    //            }

    //            var ok = true;
    //            try {
    //                $.datepicker.parseDate('dd/mm/yy', value);
    //            }
    //            catch (err) {
    //                ok = false;
    //            }
    //            return ok;
    //        });
    //});

    $('#PHOTOfile').change(function () {
        debugger
        var input = this;
        var url = $(this).val();
        var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();
        if (input.files && input.files[0] && (ext == "gif" || ext == "png" || ext == "jpeg" || ext == "jpg")) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#img2').attr('src', e.target.result);
                $('#PHOTOfile1').val(url);
                //$('#PHOTOBase64').val(11);
                //$('[name="PHOTOfile"]').attr('data-val', true);
            }
            reader.readAsDataURL(input.files[0]);
        }
        else {
            $('#img2').attr('src', '/assets/no_preview.png');
        }
    });


</script>